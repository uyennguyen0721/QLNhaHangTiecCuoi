# Generated by Django 3.2.6 on 2021-12-15 04:56

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='DrinkBillDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_price', models.FloatField()),
                ('quantity', models.IntegerField()),
                ('unit', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'drink_bill_detail',
            },
        ),
        migrations.CreateModel(
            name='FoodBillDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_price', models.FloatField()),
            ],
            options={
                'db_table': 'food_bill_detail',
            },
        ),
        migrations.CreateModel(
            name='FoodType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'food_type',
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('party_name', models.CharField(max_length=100)),
                ('table_quantity', models.IntegerField()),
                ('rental_date', models.DateTimeField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('lobby_price', models.FloatField()),
                ('session', models.IntegerField(default=1)),
                ('totalBill', models.FloatField()),
            ],
            options={
                'db_table': 'invoice',
            },
        ),
        migrations.CreateModel(
            name='MenuDrink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('price', models.FloatField()),
                ('active', models.BooleanField(default=True)),
                ('image', models.ImageField(null=True, upload_to='img/drink')),
                ('unit', models.CharField(max_length=50, null=True)),
            ],
            options={
                'db_table': 'menu_drink',
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'payment_method',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('price', models.FloatField()),
                ('active', models.BooleanField(default=True)),
                ('image', models.ImageField(null=True, upload_to='img/service')),
            ],
            options={
                'db_table': 'service',
            },
        ),
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('event_type', models.IntegerField(choices=[(1, 'Wedding'), (2, 'Conference'), (3, 'Birthday')])),
            ],
            options={
                'db_table': 'service_type',
            },
        ),
        migrations.CreateModel(
            name='WeddingLobby',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('image', models.ImageField(null=True, upload_to='img/lobby')),
                ('location', models.IntegerField()),
                ('capacity', models.IntegerField()),
                ('description', models.TextField(null=True)),
            ],
            options={
                'db_table': 'wedding_lobby',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(max_length=50)),
                ('address', models.CharField(max_length=100)),
                ('avatar', models.ImageField(upload_to='img/avatar/%Y/%m')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='WeddingLobbyPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.IntegerField(choices=[(1, 'Morning'), (2, 'Noon'), (3, 'Evening')])),
                ('is_weekend', models.BooleanField()),
                ('price', models.FloatField()),
                ('wedding_lobby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wedding_lobby_prices', to='NhaHangTiecCuoiApp.weddinglobby')),
            ],
            options={
                'db_table': 'wedding_lobby_price',
            },
        ),
        migrations.CreateModel(
            name='ServiceBillDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_price', models.FloatField()),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NhaHangTiecCuoiApp.invoice')),
                ('service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='NhaHangTiecCuoiApp.service')),
            ],
            options={
                'db_table': 'service_bill_detail',
            },
        ),
        migrations.AddField(
            model_name='service',
            name='service_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='services', to='NhaHangTiecCuoiApp.servicetype'),
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('rate', models.PositiveSmallIntegerField(default=0)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rates', to=settings.AUTH_USER_MODEL, unique=True)),
            ],
            options={
                'db_table': 'rating',
            },
        ),
        migrations.CreateModel(
            name='MenuFood',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('price', models.FloatField()),
                ('active', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(null=True, upload_to='img/food')),
                ('is_vegetarian', models.BooleanField(default=False)),
                ('food_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='menu_foods', to='NhaHangTiecCuoiApp.foodtype')),
            ],
            options={
                'db_table': 'menu_food',
            },
        ),
        migrations.AddField(
            model_name='invoice',
            name='drinks',
            field=models.ManyToManyField(blank=True, null=True, related_name='invoice_drinks', through='NhaHangTiecCuoiApp.DrinkBillDetail', to='NhaHangTiecCuoiApp.MenuDrink'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='foods',
            field=models.ManyToManyField(blank=True, null=True, related_name='invoice_foods', through='NhaHangTiecCuoiApp.FoodBillDetail', to='NhaHangTiecCuoiApp.MenuFood'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='payment_method',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invoices_pay', to='NhaHangTiecCuoiApp.paymentmethod'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='services',
            field=models.ManyToManyField(blank=True, null=True, related_name='invoice_services', through='NhaHangTiecCuoiApp.ServiceBillDetail', to='NhaHangTiecCuoiApp.Service'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invoices_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='invoice',
            name='wedding_lobby',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invoices_lobby', to='NhaHangTiecCuoiApp.weddinglobby'),
        ),
        migrations.AddField(
            model_name='foodbilldetail',
            name='invoice',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NhaHangTiecCuoiApp.invoice'),
        ),
        migrations.AddField(
            model_name='foodbilldetail',
            name='menu_food',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='NhaHangTiecCuoiApp.menufood'),
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='feedbacks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'feedback',
            },
        ),
        migrations.AddField(
            model_name='drinkbilldetail',
            name='invoice',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NhaHangTiecCuoiApp.invoice'),
        ),
        migrations.AddField(
            model_name='drinkbilldetail',
            name='menu_drink',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='NhaHangTiecCuoiApp.menudrink'),
        ),
    ]
